name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']
      fail-fast: false

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Download and prepare icons
      run: |
        python src/resources/download_icons.py
        # Temporary workaround: Create empty PNG files for icons
        mkdir -p src/resources/icons
        touch src/resources/icons/new_connection.png
        touch src/resources/icons/save.png
        touch src/resources/icons/load.png
        touch src/resources/icons/split_view.png
        touch src/resources/icons/protocol.png
        touch src/resources/icons/automation.png
        touch src/resources/icons/dark_mode.png
        touch src/resources/icons/security.png
        touch src/resources/icons/user.png
        touch src/resources/icons/export.png
        touch src/resources/icons/search.png
        touch src/resources/icons/settings.png
    
    - name: Compile resources
      run: python src/resources/compile_resources.py
    
    - name: Run tests
      run: |
        python -m pytest tests/ --cov=src --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    
    - name: Run linters
      run: |
        # Run black first to auto-format
        black --check src tests
        # Then run other linters
        isort --check-only src tests
        flake8 src tests
        mypy src 